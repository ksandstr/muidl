
#ifndef SEEN_MUIDL_IDL_TRIVIAL_TEST
#define SEEN_MUIDL_IDL_TRIVIAL_TEST

#include <posix-base.idl>


[StubPrefix(__countserv)]
interface Countserv
{
	/* you may hyperventilate! */
	[Label(666)]
	long bump();

	[Label(667)]
	void set(in long value);

	[Label(668)]
	void read(out long value);

	[Label(669)]
	void read_modify_write(
		in long change,
		in short max_tries,
		out long oldval);

	[Label(670)]
	void may_fail(in short what, in long how, in octet when)
		raises(Posix::Errno);

	[Label(671)]
	unsigned short may_fail_with_retval(
		in short what,
		in long how,
		in octet when)
			raises(Posix::Errno);

	typedef sequence<long, 20> something;
	typedef sequence<short, 20> packed_something;
	typedef sequence<octet, 32> fiddly_something;

	[Label(672)]
	void with_inline_sequence(in something hurr);

	[Label(673)]
	void with_packed_inline_sequence(in packed_something durr);

	[Label(674)]
	void fiddly(in fiddly_something herpaderp);

	[Label(675)]
	long two_at_once(
		in packed_something hlerp,
		in fiddly_something glerp);

	[Label(676)]
	oneway void raise_alarm_or_dont(in long yes_yes_what_what);

	[Label(677)]
	void widdly_scuds(
		out fiddly_something cheese_fries);

	[Label(678)]
	void with_output_sequences(
		out something delivery_for_mr_claus,
		out packed_something surely_something_good);

	[Label(679)]
	void with_inout_sequence(
		inout something whatevs_dudekins);
};


#endif
