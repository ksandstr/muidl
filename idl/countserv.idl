
#ifndef SEEN_MUIDL_IDL_TRIVIAL_TEST
#define SEEN_MUIDL_IDL_TRIVIAL_TEST

#include <posix-base.idl>


struct henchman {
	octet first, second;
	short third, fourth;
	long fifth, sixth;
	char seventh, eigth;
	octet surprise;
};

struct fatcat {
	boolean maybe;
	long was_the_year;
	long long a_big_thing;
	short stuff;
	boolean perhaps;
	octet stream;
	henchman bub, bob;
};

struct toy {
	boolean what, happen, where;
	octet when;
	boolean how;
};

struct slimkitten {
	toy mouse, ball, horse;
};


[StubPrefix(__countserv)]
interface Countserv
{
	[Label(5)]
	void hang_in_there(
		in short what,
		in long boing,
		in octet whee,
		in slimkitten the_annoying_thing,
		in fatcat el_parametro_grande);

#if 0
	/* NOTE: this won't work until array parameters are encoded properly. */
	typedef henchman small_crew[5];

	[Label(23)]
	void personnel_transfer(
		in henchman head_mook,
		in small_crew whatsits);
#endif

	[Label(123)]
	long outsy_with_rv(
		in octet something,
		out long whatever,
		out short the_other_one,
		inout octet status_flag_mask_thing);

	/* you may hyperventilate! */
	[Label(666)]
	long bump();

	[Label(667)]
	long reset(in long value);		/* "returns old value", or some such */

	[Label(668)]
	void read(out long value);

	[Label(669)]
	void read_modify_write(
		in long change,
		in short max_tries,
		out long oldval);

	[Label(670)]
	void may_fail(in short what, in long how, in octet when)
		raises(Posix::Errno);

	[Label(671)]
	unsigned short may_fail_with_retval(
		in short what,
		in long how,
		inout octet when)
			raises(Posix::Errno);

#if 0
	typedef sequence<long, 20> something;
	typedef sequence<short, 20> packed_something;
	typedef sequence<octet, 32> fiddly_something;

	[Label(672)]
	void with_inline_sequence(in something hurr);

	[Label(673)]
	void with_packed_inline_sequence(in packed_something durr);

	[Label(674)]
	void fiddly(in fiddly_something herpaderp);

	[Label(675)]
	long two_at_once(
		in packed_something hlerp,
		in fiddly_something glerp);

	[Label(676)]
	oneway void raise_alarm_or_dont(in long yes_yes_what_what);

	[Label(677)]
	void widdly_scuds(
		out fiddly_something cheese_fries);

	[Label(678)]
	void with_output_sequences(
		out something delivery_for_mr_claus,
		out packed_something surely_something_good);

	[Label(679)]
	void with_inout_sequence(
		inout something whatevs_dudekins);
#endif
};


#endif
