
/* AUTOTEST: ./muidl -D __TEST__=%t -I idl %n */

#include "l4x2.idl"
#include "posix-base.idl"


module register
{

typedef L4X2::word word;

struct unrelated_to_muix
{
	long foo;
	string<20> bar;
	octet zort;
	unsigned short blammo;
	octet something[23], whatever_else;
};

[StubPrefix(__explicitprefix)]
interface Example
{
	/* these only exist for test's sake, move them out at some point */
	[Label(0xface)]
	void void_operation(in word foo, in word bar)
		raises(Posix::Errno);

	[Label(0xfacf)]
	unsigned short ushort_operation(in word foo, in unsigned short mask)
		raises(Posix::Errno);

	[Label(0xfad0)]
	octet octet_operation(in word foo, inout octet mask)
		raises(Posix::Errno);

	[Label(0xfad1)]
	void outsy_operation(in word foo, out word bar);

/* TEST 1: oneway operation with non-void return type
 * expected: failure
 */
#if __TEST__ == 1
	[Label(0xdead)]
	oneway short oneway_short_operation();
#endif

/* TEST 2: oneway operation that raises an exception
 * expected: failure
 */
#if __TEST__ == 2
	[Label(0xdead)]
	oneway void oneway_void_operation_that_raises()
		raises(Posix::Errno);
#endif

};

};
