IDL properties defined by Âµidl


For interfaces:

StubPrefix(__prefix) -- forces a constant prefix for client stubs generated
for the interface.

IfaceLabel(u16) -- identify the interface's operations by this u16 in the
tag's label field, and the op declaration's label in MR1. Helps conserve the
label space.

FirstLabel(u32) -- what number to start the interface's op decls' labeling
from. When IfaceLabel is present, defaults to 0. Interfaces without an
IfaceLabel property must have either FirstLabel also, or declare labels per op
decl explicitly.


For operations:

Label(u16) -- the operation's message label.

TagMask(u32/64) -- a mask applied to the raw representation of the message
tag before it is compared with Label. This permits definition of handlers for
the L4.X2 protocols.

StubSendTimeout, StubRecvTimeout -- if one or both of these are defined,
a stub with timeout parameters is emitted. StubRecvTimeout cannot be specified
for a oneway operation.

StubTimeouts -- equivalent to StubSendTimeout and StubRecvTimeout at the same
time.


For operation parameters:

MR(n) -- force an in-parameter or an out-parameter into a particular message
word. Only valid for single-word fixed-length types. (TODO: When applied to
inout parameters, equivalent to InMR(n), OutMR(n).)

InMR(n), OutMR(n) -- force an in-out parameter's message words on either side
of the transfer. TODO


For enums:

NoValuePrefix -- instead of [mod_][iface_]enumname_valuename, put just
"valuename" in the enumeration field. TODO


For structs and unions:

NoPacked -- don't pack the structure definition.


For exceptions (libIDL doesn't recognize properties on exceptions yet!):

NegativeReturn(fieldname) -- pass fieldname, which must be an unsigned short
or octet type, in the return value of a stub that is declared to raise this
exception. To pop the exception, the server-side uses a negative return
code. TODO

Label(u16) -- the label by which this exception is identified by. May not
overlap the labels of other exceptions declared as raised by the same
operation. TODO
